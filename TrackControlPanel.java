import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;
import javax.swing.Timer;
/*
 * TrackControlPanel.java
 *
 * Created on May 13, 2004, 11:53 AM
 */

/**
 *
 * @author  Kevin Ziemer
 */
public class TrackControlPanel extends JPanel implements ActionListener {
    private PlotPanel myPlotPanel;
    private Timer timer;
    private int delay = 10;
    private boolean cW = true;
    
    /** Creates new form TrackControlPanel */
    public TrackControlPanel(PlotPanel inputPanel) {
        initComponents();
      
        myPlotPanel = inputPanel;
        timer = new Timer(delay,this);
        aniPosSlider.setMinimum(0);
        aniPosSlider.setValue(0);
        aniPosSlider.setMaximum(myPlotPanel.getNumberOfPoints()-1);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        MouseMovementDirection = new javax.swing.ButtonGroup();
        runAnTB = new javax.swing.JToggleButton();
        aniPosSlider = new javax.swing.JSlider();
        cwRadio = new javax.swing.JRadioButton();
        ccwRadio = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        setBackground(new java.awt.Color(255, 255, 255));
        runAnTB.setText("Run Animation");
        runAnTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runAnTBActionPerformed(evt);
            }
        });

        add(runAnTB);
        runAnTB.setBounds(50, 20, 116, 26);

        aniPosSlider.setBackground(new java.awt.Color(255, 255, 255));
        aniPosSlider.setValue(0);
        aniPosSlider.setAlignmentY(5.0F);
        aniPosSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                aniPosSliderStateChanged(evt);
            }
        });

        add(aniPosSlider);
        aniPosSlider.setBounds(30, 60, 150, 16);

        cwRadio.setBackground(new java.awt.Color(255, 255, 255));
        cwRadio.setSelected(true);
        cwRadio.setText("Clockwise");
        MouseMovementDirection.add(cwRadio);
        cwRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cwRadioActionPerformed(evt);
            }
        });

        add(cwRadio);
        cwRadio.setBounds(40, 160, 84, 24);

        ccwRadio.setBackground(new java.awt.Color(255, 255, 255));
        ccwRadio.setText("Counter Clockwise");
        MouseMovementDirection.add(ccwRadio);
        ccwRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccwRadioActionPerformed(evt);
            }
        });

        add(ccwRadio);
        ccwRadio.setBounds(40, 190, 150, 24);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mouse Movement Direction:");
        add(jLabel1);
        jLabel1.setBounds(10, 140, 170, 16);

    }//GEN-END:initComponents

    private void ccwRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccwRadioActionPerformed
        cW = false;
        myPlotPanel.setCtrClockwiseDirection();
    }//GEN-LAST:event_ccwRadioActionPerformed

    private void cwRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cwRadioActionPerformed
        cW = true;
        myPlotPanel.setClockwiseDirection();
    }//GEN-LAST:event_cwRadioActionPerformed

    private void aniPosSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_aniPosSliderStateChanged
        myPlotPanel.setAnimationNumber(aniPosSlider.getValue());
    }//GEN-LAST:event_aniPosSliderStateChanged

    private void runAnTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runAnTBActionPerformed
        if( runAnTB.isSelected() )
        {
            myPlotPanel.startAnimation();
            timer.start();
        }
        else
        {
            timer.stop();
            //myPlotPanel.setAnimationNumber(0);
        }
        
    }//GEN-LAST:event_runAnTBActionPerformed
    public boolean isCW()
    {
        return cW;
        
    }
    public void actionPerformed(ActionEvent e) 
    {
        aniPosSlider.setValue(myPlotPanel.nextAnimationPoint());  // Animate + update slider
    }    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup MouseMovementDirection;
    private javax.swing.JSlider aniPosSlider;
    private javax.swing.JRadioButton ccwRadio;
    private javax.swing.JRadioButton cwRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton runAnTB;
    // End of variables declaration//GEN-END:variables
    
}
