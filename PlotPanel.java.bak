/*
 * PlotPanel.java
 *
 * Created on May 7, 2004, 11:43 AM
 */
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;
/**
 *
 * @author  Kevin Ziemer
 */
public class PlotPanel extends JPanel implements MouseListener, MouseMotionListener {
    
    private IntPoint locationsToPlot[];
    private TrackCoords myTrackCoords;
    private boolean trackModifiable;
    private int pointSize;
    private int numberOfPointsDefined;
    private IntPoint nextPoint;
    
    /** Creates new form PlotPanel */
    public PlotPanel() {
        initComponents();
        kzinit();
    }
    public PlotPanel(IntPoint inputData[])
    {
        initComponents();
        kzinit();
        locationsToPlot = inputData;
    }
    private void kzinit()
    {
        nextPoint = new IntPoint();
        numberOfPointsDefined = 0;
        pointSize = 2;
        trackModifiable = true;
        myTrackCoords = new TrackCoords();
        addMouseListener(this);
        addMouseMotionListener(this);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        
        setLayout(new java.awt.BorderLayout());
        
    }//GEN-END:initComponents
    
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        
        for(int i=0; i < locationsToPlot.length; i++)
        {
            g.fillOval((int)locationsToPlot[i].getx()+pointSize,(int)locationsToPlot[i].gety()+pointSize,2*pointSize,2*pointSize);
            //g.drawString("i", 400, 400);
            if(numberOfPointsDefined > 0)
            {
                g.drawLine((int) myTrackCoords.getPoint(0).getx(),(int) myTrackCoords.getPoint(0).gety(),
                            (int) myTrackCoords.getPoint(1).getx(),(int) myTrackCoords.getPoint(1).gety());
            }
            if(numberOfPointsDefined > 1)
            {
                g.drawLine((int) myTrackCoords.getPoint(2).getx(),(int) myTrackCoords.getPoint(2).gety(),
                            (int) myTrackCoords.getPoint(1).getx(),(int) myTrackCoords.getPoint(1).gety());
            }
        }
        
    }
    
    public void mouseClicked(MouseEvent e) {
        //System.out.print("\nMouse Clicked:\n");
        if(numberOfPointsDefined == 4)
        {
            // reset the track
            numberOfPointsDefined = 0;
            myTrackCoords.reset();
        }
        IntPoint newPoint = new IntPoint(e.getX(),e.getY());
        myTrackCoords.setPoint(newPoint, numberOfPointsDefined);
        numberOfPointsDefined = numberOfPointsDefined + 1;
        if(numberOfPointsDefined < 3)
        {
            myTrackCoords.setPoint(newPoint, numberOfPointsDefined);
        }
        if(numberOfPointsDefined == 3)
        {
            guessPoint4();
            numberOfPointsDefined = numberOfPointsDefined + 1;
        }
        repaint();
    }
    
    public void mouseEntered(MouseEvent e) {
        //System.out.print("\nMouse Entered:\n");
    }
    
    public void mouseExited(MouseEvent e) {
        //System.out.print("\nMouse Exited:\n");
        if(numberOfPointsDefined < 4)
           numberOfPointsDefined = 0;
        repaint();
    }
    
    public void mousePressed(MouseEvent e) {
        //System.out.print("\nMouse Pressed:\n");
    }
    
    public void mouseReleased(MouseEvent e) {
        //System.out.print("\nMouse Released:\n");
    }
    
    public void guessPoint4()
    {
        repaint();
    }
    
    public void mouseDragged(MouseEvent e) {
        //System.out.print("\nMouse Dragged:\n");
    }
    
    public void mouseMoved(MouseEvent e) {
        //System.out.print("\nMouse Moved:\n");
        if((numberOfPointsDefined < 4) && (numberOfPointsDefined > 0))
        {
            nextPoint.setX(e.getX());
            nextPoint.setY(e.getY());
            myTrackCoords.setPoint(nextPoint, numberOfPointsDefined);
            if(numberOfPointsDefined == 2)
            {
                guessPoint4();
            }
        }
        repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
